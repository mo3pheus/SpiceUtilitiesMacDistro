
package spice.basic;

/**
Class BodyName represents body-name mappings that
are initialized by specification of a body name.

<p> SPICE applications normally won't need to use
this class directly; they should use the class
{@link spice.basic.Body} instead.

<h3> Version 2.0.0 26-DEC-2016 (NJB)</h3>

Functional change: getName now returns the original string used
to create the BodyName instance. Formerly the returned name was
generated by converting the input name to an ID code, then
translating that ID code to a name.

<p>Added deepCopy method.

<h3> Version 1.0.0 24-AUG-2009 (NJB)</h3>
*/
public class BodyName extends IDMap
{

   //
   // Fields
   //
   private String           bodyName;


   //
   // Constructors
   //

   /**
   Create a new BodyName from a name string.
   */
   public BodyName ( String name )
   {
      bodyName = new String(name);
   }

   /**
   Return the integer Body ID code of this BodyCode instance.
   The code is that associated with the name at the time of the call.
   */
   public int getIDCode()

      throws SpiceException
   {
      int IDcode = CSPICE.bods2c( bodyName );

      return ( IDcode );
   }


   /**
   Return a deep copy of the body name associated with this ID code. 
   */
   public String getName()

      throws SpiceException
   {
      return ( new String(bodyName) );
   }


   /**
   Return a deep copy of this instance.
   */
   public BodyName deepCopy()

      throws SpiceException
   {
      return ( new BodyName( this.bodyName ) );
   }
}
